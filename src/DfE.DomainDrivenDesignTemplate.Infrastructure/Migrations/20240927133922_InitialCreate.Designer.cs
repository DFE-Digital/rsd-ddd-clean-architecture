// <auto-generated />
using System;
using DfE.DomainDrivenDesignTemplate.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DfE.DomainDrivenDesignTemplate.Infrastructure.Migrations
{
    [DbContext(typeof(SclContext))]
    [Migration("20240927133922_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DfE.DomainDrivenDesignTemplate.Domain.Entities.Schools.PrincipalDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PrincipalId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Phone");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeId");

                    b.HasKey("Id");

                    b.ToTable("PrincipalDetails", "scl");
                });

            modelBuilder.Entity("DfE.DomainDrivenDesignTemplate.Domain.Entities.Schools.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("LastRefresh")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastRefresh");

                    b.Property<int>("PrincipalId")
                        .HasColumnType("int");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SchoolName");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalId")
                        .IsUnique();

                    b.ToTable("Schools", "scl");
                });

            modelBuilder.Entity("DfE.DomainDrivenDesignTemplate.Domain.Entities.Schools.School", b =>
                {
                    b.HasOne("DfE.DomainDrivenDesignTemplate.Domain.Entities.Schools.PrincipalDetails", "PrincipalDetails")
                        .WithOne()
                        .HasForeignKey("DfE.DomainDrivenDesignTemplate.Domain.Entities.Schools.School", "PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DfE.DomainDrivenDesignTemplate.Domain.ValueObjects.NameDetails", "NameDetails", b1 =>
                        {
                            b1.Property<int>("SchoolId")
                                .HasColumnType("int");

                            b1.Property<string>("NameDisplayAs")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("NameDisplayAs");

                            b1.Property<string>("NameFullTitle")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("NameFullTitle");

                            b1.Property<string>("NameListAs")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("NameListAs");

                            b1.HasKey("SchoolId");

                            b1.ToTable("Schools", "scl");

                            b1.WithOwner()
                                .HasForeignKey("SchoolId");
                        });

                    b.Navigation("NameDetails")
                        .IsRequired();

                    b.Navigation("PrincipalDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
