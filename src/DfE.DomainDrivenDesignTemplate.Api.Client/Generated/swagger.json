{
  "x-generator": "NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Api",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/Schools/{schoolName}/principal": {
      "get": {
        "tags": [
          "Schools"
        ],
        "summary": "Retrieve Principal by school name",
        "operationId": "Schools_GetPrincipalBySchool",
        "parameters": [
          {
            "name": "schoolName",
            "in": "path",
            "required": true,
            "description": "The school name.",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A Person object representing the Principal.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Principal"
                }
              }
            }
          },
          "404": {
            "description": "School not found."
          },
          "400": {
            "description": "School cannot be null or empty."
          }
        }
      }
    },
    "/v1/Schools/principals": {
      "post": {
        "tags": [
          "Schools"
        ],
        "summary": "Retrieve a collection of principals by a collection of school names",
        "operationId": "Schools_GetPrincipalsBySchools",
        "requestBody": {
          "x-name": "request",
          "description": "The request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPrincipalsBySchoolsQuery"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A collection of Principal objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Principal"
                  }
                }
              }
            }
          },
          "400": {
            "description": "School names cannot be null or empty."
          }
        }
      }
    },
    "/v1/Schools": {
      "post": {
        "tags": [
          "Schools"
        ],
        "summary": "Creates a new School along with the Principal Details",
        "operationId": "Schools_CreateSchool",
        "requestBody": {
          "x-name": "request",
          "description": "The request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSchoolCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "School created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolId"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/v1/Schools/createReport": {
      "post": {
        "tags": [
          "Schools"
        ],
        "summary": "An example endpoint to trigger a background task",
        "operationId": "Schools_CreateReport",
        "requestBody": {
          "x-name": "request",
          "description": "The request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Task queued successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      }
    },
    "/odata/SchoolsOData": {
      "get": {
        "tags": [
          "SchoolsOData"
        ],
        "operationId": "SchoolsOData_Get",
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          },
          {
            "name": "select",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 4
          },
          {
            "name": "expand",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 5
          },
          {
            "name": "orderby",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/odata/$metadata": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Generates the OData $metadata document.",
        "operationId": "Metadata_GetMetadata",
        "responses": {
          "200": {
            "description": "The IEdmModel representing $metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IEdmModel"
                }
              }
            }
          }
        }
      }
    },
    "/odata": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "summary": "Generates the OData service document.",
        "operationId": "Metadata_GetServiceDocument",
        "responses": {
          "200": {
            "description": "The service document for the service.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ODataServiceDocument"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Principal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Person"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schoolName": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Person": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "displayNameWithTitle": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "GetPrincipalsBySchoolsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schoolNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SchoolId": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateSchoolCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schoolName": {
            "type": "string"
          },
          "lastRefresh": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "nameDetails": {
            "$ref": "#/components/schemas/NameDetailsModel"
          },
          "principalDetails": {
            "$ref": "#/components/schemas/PrincipalDetailsModel"
          }
        }
      },
      "NameDetailsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PrincipalDetailsModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "typeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateReportCommand": {
        "type": "object",
        "additionalProperties": false
      },
      "IEdmModel": {
        "type": "object",
        "description": "Semantic representation of an EDM model.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "schemaElements": {
            "type": "array",
            "description": "Gets the collection of schema elements that are contained in this model.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEdmSchemaElement"
            }
          },
          "vocabularyAnnotations": {
            "type": "array",
            "description": "Gets the collection of vocabulary annotations that are contained in this model.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEdmVocabularyAnnotation"
            }
          },
          "referencedModels": {
            "type": "array",
            "description": "Gets the collection of models referred to by this model (mainly by the this.References).",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEdmModel"
            }
          },
          "declaredNamespaces": {
            "type": "array",
            "description": "Gets the collection of namespaces that schema elements use contained in this model.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "directValueAnnotationsManager": {
            "description": "Gets the model's annotations manager.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IEdmDirectValueAnnotationsManager"
              }
            ]
          },
          "entityContainer": {
            "description": "Gets the only one entity container of the model.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IEdmEntityContainer"
              }
            ]
          }
        }
      },
      "IEdmSchemaElement": {
        "type": "object",
        "description": "Common base interface for all named children of EDM schema.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "schemaElementKind": {
            "description": "Gets the kind of this schema element.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EdmSchemaElementKind"
              }
            ]
          },
          "namespace": {
            "type": "string",
            "description": "Gets the namespace this schema element belongs to.",
            "nullable": true
          }
        }
      },
      "EdmSchemaElementKind": {
        "type": "string",
        "description": "Defines EDM schema element types.",
        "x-enumNames": [
          "None",
          "TypeDefinition",
          "Term",
          "Action",
          "EntityContainer",
          "Function"
        ],
        "enum": [
          "None",
          "TypeDefinition",
          "Term",
          "Action",
          "EntityContainer",
          "Function"
        ]
      },
      "IEdmVocabularyAnnotation": {
        "type": "object",
        "description": "Represents an EDM vocabulary annotation.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "qualifier": {
            "type": "string",
            "description": "Gets the qualifier used to discriminate between multiple bindings of the same property or type.",
            "nullable": true
          },
          "term": {
            "description": "Gets the term bound by the annotation.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IEdmTerm"
              }
            ]
          },
          "target": {
            "description": "Gets the element the annotation applies to.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IEdmVocabularyAnnotatable"
              }
            ]
          },
          "value": {
            "description": "Gets the expression producing the value of the annotation.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IEdmExpression"
              }
            ]
          },
          "usesDefault": {
            "type": "boolean",
            "description": "Gets whether the annotation uses a default value."
          }
        }
      },
      "IEdmTerm": {
        "type": "object",
        "description": "Represents an EDM term.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "Gets the type of this term.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IEdmTypeReference"
              }
            ]
          },
          "appliesTo": {
            "type": "string",
            "description": "Gets the AppliesTo of this term.",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "description": "Gets the DefaultValue of this term.",
            "nullable": true
          }
        }
      },
      "IEdmTypeReference": {
        "type": "object",
        "description": "Represents a references to a type.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "isNullable": {
            "type": "boolean",
            "description": "Gets a value indicating whether this type is nullable."
          },
          "definition": {
            "description": "Gets the definition to which this type refers.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IEdmType"
              }
            ]
          }
        }
      },
      "IEdmType": {
        "type": "object",
        "description": "Represents the definition of an EDM type.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "typeKind": {
            "description": "Gets the kind of this type.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EdmTypeKind"
              }
            ]
          }
        }
      },
      "EdmTypeKind": {
        "type": "string",
        "description": "Defines EDM metatypes.",
        "x-enumNames": [
          "None",
          "Primitive",
          "Entity",
          "Complex",
          "Collection",
          "EntityReference",
          "Enum",
          "TypeDefinition",
          "Untyped",
          "Path"
        ],
        "enum": [
          "None",
          "Primitive",
          "Entity",
          "Complex",
          "Collection",
          "EntityReference",
          "Enum",
          "TypeDefinition",
          "Untyped",
          "Path"
        ]
      },
      "IEdmVocabularyAnnotatable": {
        "type": "object",
        "description": "Represents an element that can be targeted by Vocabulary Annotations",
        "x-abstract": true,
        "additionalProperties": false
      },
      "IEdmExpression": {
        "type": "object",
        "description": "Represents an EDM expression.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "expressionKind": {
            "description": "Gets the kind of this expression.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EdmExpressionKind"
              }
            ]
          }
        }
      },
      "EdmExpressionKind": {
        "type": "string",
        "description": "Defines EDM expression kinds.",
        "x-enumNames": [
          "None",
          "BinaryConstant",
          "BooleanConstant",
          "DateTimeOffsetConstant",
          "DecimalConstant",
          "FloatingConstant",
          "GuidConstant",
          "IntegerConstant",
          "StringConstant",
          "DurationConstant",
          "Null",
          "Record",
          "Collection",
          "Path",
          "If",
          "Cast",
          "IsOf",
          "FunctionApplication",
          "LabeledExpressionReference",
          "Labeled",
          "PropertyPath",
          "NavigationPropertyPath",
          "DateConstant",
          "TimeOfDayConstant",
          "EnumMember",
          "AnnotationPath"
        ],
        "enum": [
          "None",
          "BinaryConstant",
          "BooleanConstant",
          "DateTimeOffsetConstant",
          "DecimalConstant",
          "FloatingConstant",
          "GuidConstant",
          "IntegerConstant",
          "StringConstant",
          "DurationConstant",
          "Null",
          "Record",
          "Collection",
          "Path",
          "If",
          "Cast",
          "IsOf",
          "FunctionApplication",
          "LabeledExpressionReference",
          "Labeled",
          "PropertyPath",
          "NavigationPropertyPath",
          "DateConstant",
          "TimeOfDayConstant",
          "EnumMember",
          "AnnotationPath"
        ]
      },
      "IEdmDirectValueAnnotationsManager": {
        "type": "object",
        "description": "Manages getting and setting direct annotations on EDM elements.",
        "x-abstract": true,
        "additionalProperties": false
      },
      "IEdmEntityContainer": {
        "type": "object",
        "description": "Represents an EDM entity container.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "elements": {
            "type": "array",
            "description": "Gets a collection of the elements of this entity container.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IEdmEntityContainerElement"
            }
          }
        }
      },
      "IEdmEntityContainerElement": {
        "type": "object",
        "description": "Represents the common elements of all EDM entity container elements.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "containerElementKind": {
            "description": "Gets the kind of element of this container element.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EdmContainerElementKind"
              }
            ]
          },
          "container": {
            "description": "Gets the container that contains this element.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IEdmEntityContainer"
              }
            ]
          }
        }
      },
      "EdmContainerElementKind": {
        "type": "string",
        "description": "Defines EDM container element types.",
        "x-enumNames": [
          "None",
          "EntitySet",
          "ActionImport",
          "FunctionImport",
          "Singleton"
        ],
        "enum": [
          "None",
          "EntitySet",
          "ActionImport",
          "FunctionImport",
          "Singleton"
        ]
      },
      "ODataServiceDocument": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataAnnotatable"
          },
          {
            "type": "object",
            "description": "Class representing the a service document.",
            "additionalProperties": false,
            "properties": {
              "entitySets": {
                "type": "array",
                "description": "Gets or sets the set of entity sets in the service document.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ODataEntitySetInfo"
                }
              },
              "singletons": {
                "type": "array",
                "description": "Gets or sets the set of singletons in the service document.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ODataSingletonInfo"
                }
              },
              "functionImports": {
                "type": "array",
                "description": "Gets or sets the set of function imports in the service document.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ODataFunctionImportInfo"
                }
              }
            }
          }
        ]
      },
      "ODataEntitySetInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataServiceDocumentElement"
          },
          {
            "type": "object",
            "description": "Class representing a entity set in a service document.",
            "additionalProperties": false
          }
        ]
      },
      "ODataServiceDocumentElement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataAnnotatable"
          },
          {
            "type": "object",
            "description": "Abstract class representing an element (EntitySet, Singleton) in a service document.",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string",
                "description": "Gets or sets the URI representing the Unified Resource Locator (URL) to the element.",
                "format": "uri",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Gets or sets the name of the element; this is the entity set or singleton name in JSON.",
                "nullable": true
              },
              "title": {
                "type": "string",
                "description": "Gets or sets the title of the element; this is the title in JSON.",
                "nullable": true
              }
            }
          }
        ]
      },
      "ODataAnnotatable": {
        "type": "object",
        "description": "Base class for all annotatable types in OData library.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "typeAnnotation": {
            "description": "The annotation for storing @odata.type.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ODataTypeAnnotation"
              }
            ]
          }
        }
      },
      "ODataTypeAnnotation": {
        "type": "object",
        "description": "Annotation which stores the EDM type information of a value.",
        "additionalProperties": false,
        "properties": {
          "typeName": {
            "type": "string",
            "description": "Gets the type name to serialize, for the annotated item. ",
            "nullable": true
          },
          "type": {
            "description": "This property is redundant info about TypeName but to improve reader performance.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IEdmType"
              }
            ]
          }
        }
      },
      "ODataSingletonInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataServiceDocumentElement"
          },
          {
            "type": "object",
            "description": "Class representing a singleton in a service document.",
            "additionalProperties": false
          }
        ]
      },
      "ODataFunctionImportInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ODataServiceDocumentElement"
          },
          {
            "type": "object",
            "description": "Class representing a function Import in a service document.",
            "additionalProperties": false
          }
        ]
      }
    }
  }
}